{
  "hash": "bdd5728ba569298b76a5fe8d190a7b29",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Maps of the world\"\nauthor: \"JRowing\"\ndate: \"2025-05-6\"\ncategories: [Interesting Graphs, R Studio]\ntitle-block-banner: true\nexecute: \n  warning: false\n  message: false\n # echo: false\n \nformat:\n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n---\n\n\n\nWalk into any international gathering, and you’ll notice a striking pattern: the color red splashes across flags like a global signature. From the bold crimson of China to the deep scarlet of Turkey, red is a mainstay in vexillology. Apparently the answer lies in a blend of symbolism, practicality, and history, as explored in foundational works on flag design and color history.\n\nRed’s dominance starts with its potent symbolism. Across cultures, red evokes blood, sacrifice, and courage—themes that resonate deeply in national narratives. Whitney Smith, in his 2011 book Flag Lore of All Nations, notes that red often represents the struggles and sacrifices of a nation’s people, whether in war or revolution. China’s flag, for instance, uses red to symbolize its communist revolution, while Turkey’s red echoes the Ottoman Empire’s martial heritage.\n\nBeyond symbolism, red’s prevalence has practical roots. In the days before synthetic dyes, red was one of the easiest colors to produce. Michel Pastoureau, in his 2017 work Red: The History of a Color, explains that natural dyes like madder and cochineal were widely available and affordable, allowing even resource-scarce societies to adorn their banners with red. This accessibility ensured red’s place in early flag-making, from medieval standards to modern national emblems.\n\nHistory, too, has painted the world’s flags red. Colonial empires, particularly the British, spread their red-heavy designs—like the iconic red ensign—across the globe, influencing the flags of former colonies. Alfred Znamierowski, in his 2009 The World Encyclopedia of Flags, highlights how these imperial legacies shaped the color palettes of nations in Africa, Asia, and the Americas, embedding red in post-colonial identities.\n\nMapping the Red Flags\n\nTo visualize red’s global reach, consider the map below, which colours countries by the shade of red on their national flag;\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(maps)\nlibrary(readr)\nlibrary(stringr)\nlibrary(scales)\n\n\n# Load world map data\nworld_map <- map_data(\"world\")\n# Read the CSV data\nflag_data <- read.csv(\"country_flag_red_colors.csv\", stringsAsFactors = FALSE, check.names = FALSE)\n\n# Function to manually add missing countries with known red colors\nadd_missing_countries <- function(processed_data) {\n  # List of countries with known red colors that might be missing\n  missing_countries <- list(\n    \"Mexico\" = list(hex = \"#CE1126\", percentage = 33.33),\n    \"El Salvador\" = list(hex = \"#0F47AF\", percentage = 0),  # No red, but should be in data\n    \"Honduras\" = list(hex = \"#0073CF\", percentage = 0),     # No red\n    \"Nicaragua\" = list(hex = \"#0067C6\", percentage = 0),    # No red\n    \"Guatemala\" = list(hex = \"#4997D0\", percentage = 0)     # No red\n  )\n  \n  # Check which countries are missing and add them\n  for (country_name in names(missing_countries)) {\n    if (!country_name %in% processed_data$Country) {\n      color_info <- missing_countries[[country_name]]\n      if (color_info$percentage > 0) {  # Only add if it has red\n        processed_data <- rbind(processed_data, data.frame(\n          Country = country_name,\n          PrimaryRedHex = color_info$hex,\n          RedPercentage = color_info$percentage,\n          stringsAsFactors = FALSE\n        ))\n      }\n    }\n  }\n  \n  return(processed_data)\n}\n\n# Data preprocessing function\nprocess_flag_data <- function(data) {\n  # Create a new dataframe for processed data\n  result <- data.frame(\n    Country = character(),\n    PrimaryRedHex = character(),\n    RedPercentage = numeric(),\n    stringsAsFactors = FALSE\n  )\n  \n  for (i in 1:nrow(data)) {\n    country <- data$Country[i]\n    # Remove quotes if present\n    country <- gsub('^\"|\"$', '', country)\n    \n    red_colors <- data[i, \"Red Colors (Hex:Percent)\"]\n    # Skip if no red colors\n    if (is.na(red_colors) || red_colors == \"\" || red_colors == '\"\"') {\n      next\n    }\n    \n    # Remove surrounding quotes\n    red_colors <- gsub('^\"|\"$', '', red_colors)\n    \n    # Split by semicolon to get multiple colors if present\n    color_parts <- strsplit(red_colors, \";\")[[1]]\n    \n    # For each color, extract hex and percentage\n    max_percentage <- 0\n    primary_color <- \"\"\n    \n    for (part in color_parts) {\n      # Split by colon to separate hex and percentage\n      hex_pct <- strsplit(part, \":\")[[1]]\n      \n      if (length(hex_pct) == 2) {\n        hex <- hex_pct[1]\n        # Handle percentage conversion safely\n        pct_str <- hex_pct[2]\n        percentage <- suppressWarnings(as.numeric(pct_str))\n        \n        # Check if conversion was successful\n        if (!is.na(percentage)) {\n          # Keep track of the color with highest percentage\n          if (percentage > max_percentage) {\n            max_percentage <- percentage\n            primary_color <- hex\n          }\n        }\n      }\n    }\n    \n    # Add to result if we found a valid color\n    if (primary_color != \"\") {\n      result <- rbind(result, data.frame(\n        Country = country,\n        PrimaryRedHex = primary_color,\n        RedPercentage = max_percentage,\n        stringsAsFactors = FALSE\n      ))\n    }\n  }\n  \n  return(result)\n}\n\n# Function to standardize country names for joining\nstandardize_names <- function(country_name) {\n  # Handle specific cases that need standardization\n  replacements <- c(\n    \"United States\" = \"USA\",\n    \"United Kingdom\" = \"UK\",\n    \"Russian Federation\" = \"Russia\",\n    \"Democratic Republic of the Congo\" = \"Democratic Republic of the Congo\",\n    \"Republic of Congo\" = \"Congo\",\n    \"Ivory Coast\" = \"Côte d'Ivoire\",\n    \"São Tomé and Príncipe\" = \"Sao Tome and Principe\",\n    \"North Macedonia\" = \"Macedonia\",\n    \"the Bahamas\" = \"Bahamas\",\n    \"the Gambia\" = \"Gambia\",\n    \"Timor-Leste\" = \"East Timor\"\n  )\n  \n  if (country_name %in% names(replacements)) {\n    return(replacements[country_name])\n  }\n  \n  return(country_name)\n}\n\n\n\n# Process the data\nprocessed_data <- process_flag_data(flag_data)\n\n# Add missing countries with known red colors\nprocessed_data <- add_missing_countries(processed_data)\n\n\n# Load world map data\nworld_map <- map_data(\"world\")\n\n# Standardize country names in processed data\nprocessed_data$Country <- sapply(processed_data$Country, standardize_names)\n\n# Create a mapping dataframe to match country names in world map\nmapping_df <- data.frame(\n  map_country = unique(world_map$region),\n  stringsAsFactors = FALSE\n)\n\n# Merge data for plotting\n# Create a new dataframe for merging\nmerged_data <- world_map\n\n# Add color data\ncountry_colors <- setNames(processed_data$PrimaryRedHex, processed_data$Country)\n\n# Function to get color for a country with default for missing values\nget_color <- function(country) {\n  if (country %in% names(country_colors)) {\n    return(country_colors[country])\n  } else {\n    return(\"#CCCCCC\")  # Default gray for countries without red in flag\n  }\n}\n\n# Add color data to map data\nmerged_data$fill_color <- sapply(merged_data$region, get_color)\n\n\n\n# Plot the map\np1 <- ggplot() +\n  geom_polygon(data = merged_data, \n               aes(x = long, y = lat, group = group, fill = fill_color),\n               color = \"white\", size = 0.1) +\n  scale_fill_identity() +\n  coord_fixed(1.3) +\n  theme_minimal() +\n  labs(title = \"World Map Colored by Primary Red in National Flags\",\n       subtitle = \"Countries without red in their flags shown in gray\",\n       caption = \"Data source: country_flag_red_colors.csv\") +\n  theme(\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 10, hjust = 0.5),\n    plot.caption = element_text(size = 8, hjust = 1),\n    legend.position = \"bottom\"\n  )\n\nprint(p1)\n```\n\n::: {.cell-output-display}\n![](maps_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::",
    "supporting": [
      "maps_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}