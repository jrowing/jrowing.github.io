{
  "hash": "e0b53e3614a2d8794e3a541c784766f7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"What Did BirdNET-Pi Hear Last Month? Insights from Our smart bird identifier\"\nauthor: \"JRowing\"\ndate: \"2025-04-23\"\ncategories: [Wildlife, Statistics, Birdnet]\ntitle-block-banner: false\nexecute: \n  warning: false\n  message: false\n # echo: false\n \nformat:\n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n---\n\n\n\nOver the last month, our BirdNET-Pi setup has been busy eavesdropping on the avian soundscape around our garden. This low-cost device has been collecting acoustic data non-stop. Here’s what we have learned so far...\n\n### What is BirdNET-Pi?\n\nBirdNET-Pi is a powerful, open-source device designed to automatically identify bird species based on their calls. It uses advanced machine learning models to analyze audio recordings and classify the sounds, distinguishing between different bird species with remarkable accuracy. Built around the Raspberry Pi platform, BirdNET-Pi is a compact and affordable solution for anyone interested in birdwatching, conservation, or wildlife monitoring.\n\nAt its core, BirdNET-Pi consists of a microphone for recording bird calls, a Raspberry Pi computer to process the audio, and software that leverages a machine learning model trained on thousands of bird calls. The system continuously listens to the environment, making it capable of capturing sounds at all hours of the day and night, including those of rare or hard-to-find species.\n\nBirdNET-Pi’s ability to identify birds based on their calls is a valuable tool for researchers, conservationists, and bird enthusiasts alike. It provides a hands-free, automated way to monitor bird populations, track species diversity, and gather important ecological data, all while being incredibly easy to set up and use. Whether placed in a backyard, nature reserve, or forest, BirdNET-Pi acts as an ever-vigilant listener, expanding the possibilities of birdwatching and species monitoring.\n\n### How BirdNET-Pi Increases the Chances of Detecting Rare Species\n\nBirdNET-Pi’s constant listening capability is a game-changer when it comes to identifying rare or elusive bird species. Traditional methods of birdwatching or audio recording often rely on scheduled observation times, which can miss the fleeting moments when rare species make an appearance. However, BirdNET-Pi’s unique advantage lies in its 24/7 monitoring.\n\nBy continuously recording and analyzing bird calls in real-time, BirdNET-Pi increases the likelihood of capturing rare or seldom-heard species that might otherwise go unnoticed. Birds often have distinct, infrequent calls that occur during specific times of the day or seasons. Because BirdNET-Pi is always listening, it’s far more likely to catch these brief, sporadic vocalizations when they happen.\n\nThis proactive approach not only ensures that rare species have a better chance of being detected, but it also contributes to a more comprehensive understanding of bird populations and behaviors. By capturing these rare moments, BirdNET-Pi allows for better conservation efforts and more accurate ecological data, helping researchers and bird enthusiasts alike stay one step ahead in their birdwatching pursuits.\n\n### Monitoring the March Soundscape\nThroughout March, our BirdNET-Pi detected **thousands** of bird calls, logging them with species names, time stamps, and confidence scores. After cleaning and analysing the data from our SQLite database, I've picked out the top 25 most frequently detected bird species and visualised their activity by hour of day...\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required libraries\nlibrary(DBI)\nlibrary(RSQLite)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Connect to the SQLite database\ncon <- dbConnect(RSQLite::SQLite(), \"birds.db\")\n\n# Read detections table\ndetections <- dbReadTable(con, \"detections\")\n\n# Get top 25 species by detection count\ntop_species <- detections %>%\n  count(Com_Name, sort = TRUE) %>%\n  slice_head(n = 25) %>%\n  pull(Com_Name)\n\n# Filter to top species and extract hour\ndetections_top <- detections %>%\n  filter(Com_Name %in% top_species) %>%\n  mutate(Hour = hour(hms(Time)))\n\n# Count detections by hour for each species\nhourly_counts <- detections_top %>%\n  group_by(Com_Name, Hour) %>%\n  summarise(Count = n(), .groups = \"drop\")\n\n# Plot\nggplot(hourly_counts, aes(x = Hour, y = Count)) +\n  geom_line(color = \"steelblue\") +\n  facet_wrap(~ Com_Name, scales = \"free_y\") +\n  theme_minimal() +\n  theme(strip.clip = \"off\") +\n  labs(title = \"Top 25 Bird Species: Detections by Time of Day\",\n       x = \"Hour of Day\",\n       y = \"Number of Detections\")\n```\n\n::: {.cell-output-display}\n![](birdnetstats_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n---\n\n### What this tells us so far:\n\n#### 1. Morning is Bird Prime Time\nMost species showed a clear peak in vocal activity between 5:00 and 9:00 AM. This aligns with the well-known \"dawn chorus\" and confirms that early morning is the most active period for birdsong in our area.\n\n#### 2. Some Birds Buck the Trend\nA few species, like the Common Wood-Pigeon, showed more spread-out activity throughout the day. Others, such as woodpeckers, had sharper, time-specific peaks, often in the mid-morning. Owls, it would appear like the early hours more than late at night, Guls tend to swing by about 3pm.\n\n#### 3. Detectability Matters\nNot all species were equally common. This much is obvious, however there will be a factor of how easy they  are to detect. Some had consistently low hourly counts, suggesting rarity, quieter behaviour or limitations in acoustic identification. These species might benefit from targeted surveys or manual verification.\n\n---\n\n### Why This Matters\nUnderstanding when different species are most vocal helps refine survey methods, targeted monitoring, and even conservation planning. For backyard birders, it’s also a reminder: if you want to catch the action, get out early!\n\nWe’ll continue to log, listen, and learn as spring progresses. If you’re running BirdNET-Pi yourself, consider checking your hourly patterns too—you might be surprised by who’s been chatting while you weren’t watching.\n\nHappy birding!\n\n",
    "supporting": [
      "birdnetstats_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}